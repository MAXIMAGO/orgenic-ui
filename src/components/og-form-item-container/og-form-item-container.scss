:host {
    /* @prop --og-form-item-container-Gap: Gap size between elements */
    --og-form-item-container-Gap: 16px;

    /* @prop --og-form-item-container-Padding: Padding of the container element */
    --og-form-item-container-Padding: 0;

    /* @prop --og-form-item-container__item-MaxWidth: Max-Width of the container items */
    --og-form-item-container__item-MaxWidth: 1fr;

    /* @prop --og-form-item-container__item-MinWidth: Min-Width of the container items */
    --og-form-item-container__item-MinWidth: 300px;

    display: grid;
    grid-gap: var(--og-form-item-container-Gap);
    grid-template-columns: repeat(auto-fill, minmax(var(--og-form-item-container__item-MinWidth), var(--og-form-item-container__item-MaxWidth)));
    padding: var(--og-form-item-container-Padding);
    
    @include overflow();
}

:host(.is-inline) {
    display: inline-grid;
}

::slotted(.new-row) {
    // forces the item to start in a new "row"
    grid-column-start: 1 !important;
}

::slotted(.full-width) {
    // forces the item to end in the last col of the row
    grid-column-end: -1 !important;
}
